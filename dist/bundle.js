(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: "Raleway", sans-serif;\n  margin-bottom: 100px;\n  background-color: bisque;\n}\n\n#content {\n  width: 90%;\n  margin: 0 auto;\n  padding-top: 30px;\n  background-color: #d3b9f9;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-bottom-left-radius: 50px;\n  border-bottom-right-radius: 50px;\n}\n\n#logo {\n  max-width: 40%;\n  justify-content: center;\n  display: flex;\n  justify-items: center;\n  margin: 0 auto;\n}\n\n@media (min-width: 1000px) {\n  #logo {\n    width: 20%;\n  }\n}\n\n#home-img {\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  max-width: 800px;\n  padding: 30px;\n  padding-bottom: 0;\n}\n\n#content > h1 {\n  text-align: center;\n  font-family: "Pacifico", cursive;\n  font-weight: 200;\n  font-size: 3rem;\n  color: #302f32;\n  margin-top: 15px;\n}\n\nh2 {\n  font-family: "Pacifico", cursive;\n  margin-top: 0;\n}\n\n#links {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n#links > div {\n  justify-self: center;\n  padding: 20px;\n}\n\n#links > div:hover {\n  cursor: pointer;\n}\n\n.selected {\n  background: #fcf2ff;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 30px;\n}\n\n#tabs-content {\n  background-color: #fcf2ff;\n}\n\n#tabs-content > p {\n  width: 800px;\n  padding: 30px;\n  margin: 0 auto;\n  text-align: center;\n  line-height: 2;\n}\n\n#menu-grid {\n  padding-top: 40px;\n  margin: 0 auto;\n  justify-content: center;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 400px));\n  grid-column-gap: 10px;\n  grid-row-gap: 40px;\n}\n\n.menu-item {\n  display: grid;\n  gap: 10px;\n  justify-items: center;\n  padding: 20px 20px;\n  text-align: center;\n  border: 1px solid black;\n}\n\n.menu-item > img {\n  width: 200px;\n  border-radius: 30%;\n  /* border: 5px solid white; */\n}\n\n.menu-item > p {\n  /* width: 200px; */\n}\n\n#contact-wrapper > div {\n  text-align: center;\n  padding-top: 20px;\n}\n\n#last {\n  padding-bottom: 30px;\n  margin-bottom: 0;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,kCAAkC;EAClC,oBAAoB;EACpB,wBAAwB;AAC1B;;AAEA;EACE,UAAU;EACV,cAAc;EACd,iBAAiB;EACjB,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,+BAA+B;EAC/B,gCAAgC;AAClC;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,aAAa;EACb,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE;IACE,UAAU;EACZ;AACF;;AAEA;EACE,WAAW;EACX,cAAc;EACd,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,gCAAgC;EAChC,gBAAgB;EAChB,eAAe;EACf,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,gCAAgC;EAChC,aAAa;AACf;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,oBAAoB;EACpB,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,4BAA4B;EAC5B,6BAA6B;AAC/B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,cAAc;EACd,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,iBAAiB;EACjB,cAAc;EACd,uBAAuB;EACvB,aAAa;EACb,6DAA6D;EAC7D,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,qBAAqB;EACrB,kBAAkB;EAClB,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,gBAAgB;AAClB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: "Raleway", sans-serif;\n  margin-bottom: 100px;\n  background-color: bisque;\n}\n\n#content {\n  width: 90%;\n  margin: 0 auto;\n  padding-top: 30px;\n  background-color: #d3b9f9;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-bottom-left-radius: 50px;\n  border-bottom-right-radius: 50px;\n}\n\n#logo {\n  max-width: 40%;\n  justify-content: center;\n  display: flex;\n  justify-items: center;\n  margin: 0 auto;\n}\n\n@media (min-width: 1000px) {\n  #logo {\n    width: 20%;\n  }\n}\n\n#home-img {\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  max-width: 800px;\n  padding: 30px;\n  padding-bottom: 0;\n}\n\n#content > h1 {\n  text-align: center;\n  font-family: "Pacifico", cursive;\n  font-weight: 200;\n  font-size: 3rem;\n  color: #302f32;\n  margin-top: 15px;\n}\n\nh2 {\n  font-family: "Pacifico", cursive;\n  margin-top: 0;\n}\n\n#links {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n#links > div {\n  justify-self: center;\n  padding: 20px;\n}\n\n#links > div:hover {\n  cursor: pointer;\n}\n\n.selected {\n  background: #fcf2ff;\n  border-top-left-radius: 30px;\n  border-top-right-radius: 30px;\n}\n\n#tabs-content {\n  background-color: #fcf2ff;\n}\n\n#tabs-content > p {\n  width: 800px;\n  padding: 30px;\n  margin: 0 auto;\n  text-align: center;\n  line-height: 2;\n}\n\n#menu-grid {\n  padding-top: 40px;\n  margin: 0 auto;\n  justify-content: center;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 400px));\n  grid-column-gap: 10px;\n  grid-row-gap: 40px;\n}\n\n.menu-item {\n  display: grid;\n  gap: 10px;\n  justify-items: center;\n  padding: 20px 20px;\n  text-align: center;\n  border: 1px solid black;\n}\n\n.menu-item > img {\n  width: 200px;\n  border-radius: 30%;\n  /* border: 5px solid white; */\n}\n\n.menu-item > p {\n  /* width: 200px; */\n}\n\n#contact-wrapper > div {\n  text-align: center;\n  padding-top: 20px;\n}\n\n#last {\n  padding-bottom: 30px;\n  margin-bottom: 0;\n}\n'],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);i&&a[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],c=0;c<n.length;c++){var d=n[c],s=i.base?d[0]+i.base:d[0],A=r[s]||0,p="".concat(s," ").concat(A);r[s]=A+1;var l=t(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=o(u,i);i.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var c=t(r[a]);e[c].references--}for(var d=i(n,o),s=0;s<r.length;s++){var A=t(r[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},541:(n,e,t)=>{n.exports=t.p+"4f7fbf583f6d3fa41759.jpg"},418:(n,e,t)=>{n.exports=t.p+"9e8addba4d209748af93.jpeg"},761:(n,e,t)=>{n.exports=t.p+"b6e47e6f99d8a4d29e73.jpeg"},204:(n,e,t)=>{n.exports=t.p+"ae0fc80e49a257a1e4a1.jpeg"},921:(n,e,t)=>{n.exports=t.p+"0ada20de1e4319bddccb.jpeg"},342:(n,e,t)=>{n.exports=t.p+"ddedb475348053ae65a6.svg"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),c=t(565),d=t.n(c),s=t(216),A=t.n(s),p=t(589),l=t.n(p),u=t(28),m={};m.styleTagTransform=l(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(342);const g=document.getElementById("content");var h=t(541);function C(){const n=document.getElementById("tabs-content");for(;n.firstChild;)n.removeChild(n.firstChild);const e=document.createElement("img");e.id="home-img",e.src=h,n.appendChild(e);const t=document.createElement("p");t.innerText="Owner Ryan Kenny has been treating Middletown residents for over 20 years with authentic Mexican recipes passed down from his grandmother and shared with his family in his hometown of Puebla, Mexico. His passion for his food and his heritage is reflected in his restaurant’s décor and how he greets his guests as if they were family.\n  \n  Come to Babosa Kitchen and enjoy fresh guacamole, sizzling fajitas and traditional favorites like Chile Rellenos, Flautas and Enchiladas. The bar is fully stocked and his staff serves up some of the best margaritas around. Come and enjoy your time out on the patio with a specialty margarita or a great mexican beer like Dos Equis or Negra Modelo.",n.appendChild(t)}var E=t(418),B=t(761),x=t(204),b=t(921);function v(n,e){const t=document.createElement("div");t.classList.add("menu-item");const i=new Image;i.src=e,t.appendChild(i);const o=document.createElement("p");return t.appendChild(o),n.appendChild(t),o}function y(n){const e=document.getElementById("links").children;console.log(e);for(let n=0;n<e.length;n+=1)e[n].classList.remove("selected");n.target.classList.add("selected")}!function(){const n=new Image;n.src=f,n.id="logo",g.appendChild(n)}(),function(){const n=document.createElement("h1");n.innerText="Babosa Kitchen",g.appendChild(n)}(),function(){const n=document.createElement("div");n.id="tabs-wrapper";const e=document.createElement("div");e.id="links";const t=document.createElement("div");t.id="tabs-content";const i=document.createElement("div");i.id="home",i.innerText="Home",i.classList.add("selected");const o=document.createElement("div");o.id="menu",o.innerText="Menu";const r=document.createElement("div");r.id="contact",r.innerText="Contact Us",e.appendChild(i),e.appendChild(o),e.appendChild(r),n.appendChild(e),n.appendChild(t),g.appendChild(n)}(),function(){const n=document.createElement("div");n.id="pattern",g.appendChild(n)}(),C(),document.getElementById("home").addEventListener("click",(n=>{y(n),C()})),document.getElementById("menu").addEventListener("click",(n=>{y(n),function(){const n=document.getElementById("tabs-content");for(;n.firstChild;)n.removeChild(n.firstChild);const e=document.createElement("div");e.id="menu-grid",n.appendChild(e),v(e,E).innerText="half moon turnovers-sirloin picadillo bell peppers-scallions-tomatoes - mint mojo-pepper escabeche",v(e,B).innerText="field greens, cherry tomatoes, mango, goat cheese, tamarind-raspberry vinaigrette $10. add chicken $8.00, add shrimp $4.00 per unit.",v(e,x).innerText="\n    grilled chicken, guacamole, cheddar cheese, and cilantro",v(e,b).innerText="\n    chilean salmon, mango-red-onions-avocado, lemon citrus"}()})),document.getElementById("contact").addEventListener("click",(n=>{y(n),function(){const n=document.getElementById("tabs-content");for(;n.firstChild;)n.removeChild(n.firstChild);const e=document.createElement("div");e.id="contact-wrapper",n.appendChild(e);const t=document.createElement("div");t.innerHTML="\n      <h2>Location</h2>\n      <p>784 123 Spooner Ave., Middletown</p>\n      <p>Opening Hours: 11:00 AM - 10:00 PM</p>\n  ";const i=document.createElement("div");i.innerHTML='\n      <h2>Contact</h2>\n      <p>Email: questions@babosakitchen.com</p>\n      <p id="last">Call us: 860-577-3125</p>\n  ',e.appendChild(t),e.appendChild(i)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,